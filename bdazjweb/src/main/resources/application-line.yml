server:
  port: 18002
  tomcat:
    uri-encoding: UTF-8
    max-threads: 100

spring:
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    #driver-class-name: oracle.jdbc.driver.OracleDriver    #url: jdbc:oracle:thin:@192.168.234.1:1521:xe
    #username: zjbdatag
    #password: admin

    #使用的数据库是Demo1
    url: AES@cc4j2IuXty10IcohV/cDrZn6j7jXpTQU4iBI4sdXCWn4Y0sByMRrp3Qc6KxdTDQx
    username: AES@/oZAZpdTNvfQ04ZlX98cCA==
    password: AES@NicMvZ3F9Ldwd6q4lfv7xQ==
    platform: mysql
    #platform: oracle
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      initial-size: 5
      min-idle: 1
      max-active: 20
      query-timeout: 6000
      #设置removeAbandoned="true"时，当连接池连接数到达(getNumIdle() < 2) and (getNumActive() > getMaxActive() - 3)  [空闲的连接小于2并且活动的连接大于(最大连接-3)] 时便会启动连接回收，
      #那种活动时间超过removeAbandonedTimeout="1800"的连接将会被回收，
      #同时如果logAbandoned="true"设置为true,程序在回收连接的同时会打印日志。
      #removeAbandoned是连接池的高级功能，理论上这中配置不应该出现在实际的生产环境，因为有时应用程序执行长事务，可能这种情况下，会被连接池误回收，该种配置一般在程序测试阶段，为了定位连接泄漏的具体代码位置，被开启。
      #生产环境中连接的关闭应该靠程序自己保证。
      #先关着
      remove-abandoned: false
      #必须要remove-abandoned为false才能生效，这样连接出问题的时候，每隔3000秒请求
      async-init: true
      time-between-connect-error-millis: 3000


      #先关着
      log-abandoned: false
      transaction-query-timeout: 6000
      remove-abandoned-timeout: 1800
      filters: wall,stat
      connection-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=10000
      stat-view-servlet:
        login-username: bda
        login-password: bda
        url-pattern: /druid/*
        reset-enable: false
      web-stat-filter:
        url-pattern: /*
        exclusions: "*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*"
      #超时重试次数
      connection-error-retry-attempts: 3
      #必须为false（失败后会不断请求数据库，请求在TIME-WAIT，在数据库服务重启后，所有等待请求会访问数据库），
      #为true上面参数才会生效（：true表示pool向数据库上面的重试请求连接此时失败后标记整个pool为block并close，
      #就算后端数据库恢复正常也不进行重连，客户端对pool的请求都拒绝掉。false表示不会标记 pool为block，新的请求都会尝试去数据库请求connection。
      #默认为false。因此，如果想让数据库和网络故障恢复之后，pool能继续请求正常资源必须把此项配置设为false）
      break-after-acquire-failure: false
       #检查连接正常的sql
      validation-query: select 1 from dual
      #配置多久检测一次空闲连接（可以选择是否尽早关闭连接，看压力在server还是数据库端）
      time-between-eviction-runs-millis: 60000
      #数据库连接最小生存时间
      min-evictable-idle-time-millis: 300000

#具体可看springBoot文件
mybatis:
  type-aliases-package: com.zj.bda.persistence.entity
  mapper-locations: classpath:mapper/*.xml
  configuration:
  #自动驼峰映射
    map-underscore-to-camel-case: true
    cache-enabled: false
#这个是打印MyBatis日志的一种方式
#    configuration:
#      log-impl: org.apache.ibatis.logging.stdout.StdOutImpll

pagehelper:
  helperDialect: oracle
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql
mapper:
  #可自定义mapper，可多个
  mappers: -com.zj.bda.persistence.grace.BaseMapper
  not-empty: true
  identity: MYSQL
  #identity: ORACLE